// Code generated by sql2gql. DO NOT EDIT.

package rlts

import (
	"context"

	"github.com/google/wire"
	"github.com/ketan-10/sql2gql/examples/pokemon/internal"
	"github.com/ketan-10/sql2gql/examples/pokemon/sql2gql/repo"
	"github.com/ketan-10/sql2gql/examples/pokemon/sql2gql/table"
)

type ITypesRltsRepository interface {

	// This Table Pointing to Other Table!!!, ManyToOne <- As Many records from other table can point to this table one record

	//  Other Table Pointing to This Table!!!, OneToMany <- As This Table record can point to Multiple Other table record
	PokemonTypesByTypeID(ctx context.Context, obj *table.Types, filter *table.PokemonTypesFilter, pagination *internal.Pagination) (*table.ListPokemonTypes, error)
}

type TypesRltsRepository struct {
	PokemonTypesRepository repo.IPokemonTypesRepository
}

var NewTypesRltsRepository = wire.NewSet(
	wire.Struct(new(TypesRltsRepository), "*"),
	wire.Bind(new(ITypesRltsRepository), new(*TypesRltsRepository)),
)

func (tr *TypesRltsRepository) PokemonTypesByTypeID(ctx context.Context, obj *table.Types, filter *table.PokemonTypesFilter, pagination *internal.Pagination) (*table.ListPokemonTypes, error) {
	if obj == nil {
		return &table.ListPokemonTypes{}, nil
	}
	return tr.PokemonTypesRepository.PokemonTypesByTypeID(ctx, obj.ID, filter, pagination)
}
