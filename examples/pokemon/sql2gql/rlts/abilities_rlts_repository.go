// Code generated by sql2gql. DO NOT EDIT.

package rlts

import (
	"context"

	"github.com/google/wire"
	"github.com/ketan-10/sql2gql/examples/pokemon/internal"
	"github.com/ketan-10/sql2gql/examples/pokemon/sql2gql/repo"
	"github.com/ketan-10/sql2gql/examples/pokemon/sql2gql/table"
)

type IAbilitiesRltsRepository interface {

	// This Table Pointing to Other Table!!!, ManyToOne <- As Many records from other table can point to this table one record

	//  Other Table Pointing to This Table!!!, OneToMany <- As This Table record can point to Multiple Other table record
	PokemonAbilitiesByFkAbility(ctx context.Context, obj *table.Abilities, filter *table.PokemonAbilitiesFilter, pagination *internal.Pagination) (*table.ListPokemonAbilities, error)
}

type AbilitiesRltsRepository struct {
	PokemonAbilitiesRepository repo.IPokemonAbilitiesRepository
}

var NewAbilitiesRltsRepository = wire.NewSet(
	wire.Struct(new(AbilitiesRltsRepository), "*"),
	wire.Bind(new(IAbilitiesRltsRepository), new(*AbilitiesRltsRepository)),
)

func (ar *AbilitiesRltsRepository) PokemonAbilitiesByFkAbility(ctx context.Context, obj *table.Abilities, filter *table.PokemonAbilitiesFilter, pagination *internal.Pagination) (*table.ListPokemonAbilities, error) {
	if obj == nil {
		return &table.ListPokemonAbilities{}, nil
	}
	return ar.PokemonAbilitiesRepository.PokemonAbilitiesByFkAbility(ctx, obj.ID, filter, pagination)
}
