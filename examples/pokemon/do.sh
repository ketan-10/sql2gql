source ./docker/docker.env


cleanMigrate() {

    docker exec -i db bash -c "mysql -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'DROP DATABASE ${MYSQL_DATABASE};'"
    docker exec -i db bash -c "mysql -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'CREATE DATABASE ${MYSQL_DATABASE} CHARSET=utf8mb4;'"
    
    dir=migrations
    cat ${dir}/*.sql | docker exec -i db bash -c "mysql -u ${MYSQL_USER} -p${MYSQL_PASSWORD} --default-character-set=utf8mb4 ${MYSQL_DATABASE}"
    
    echo "Migration complete."
}

sql2gql() {
    echo "Running sql2gql..."
    find ./sql2gql ! -type d -delete

    connection=$(echo "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@127.0.0.1:3306/${MYSQL_DATABASE}?charset=utf8mb4&parseTime=true" | tr -d '\r')
    echo $connection
    go run ./cmd/sql2gql/main.go --connection="$connection"

    echo "sql2gql completed."
}

goimports() {
    echo "Running goimports..."
    go run golang.org/x/tools/cmd/goimports -w sql2gql/enum/*
    go run golang.org/x/tools/cmd/goimports -w sql2gql/table/*
    go run golang.org/x/tools/cmd/goimports -w sql2gql/repo/*
    go run golang.org/x/tools/cmd/goimports -w sql2gql/rlts/*
    go run golang.org/x/tools/cmd/goimports -w sql2gql/*.go
    echo "goimports completed"
}

yaml_graphql() {
    (echo "# Code generated by do.sh DO NOT EDIT."; cat graphql/gqlgen-header.yml; cat sql2gql/gqlgen.yml) > graphql/gqlgen.yml
}

gqlgen() {
    echo "Running gqlgen..."
    (cd graphql && go run github.com/99designs/gqlgen gen)
    echo "gqlgen completed"
}

wire() {
    echo "Running wire..."
    go run github.com/google/wire/cmd/wire ./wire_app
    echo "wire completed"
}

if [[ $1 = 'cleanMigrate' ]]; then
    cleanMigrate
elif [[ $1 = 'sql2gql' ]]; then
    sql2gql
elif [[ $1 = 'goimports' ]]; then
    goimports
elif [[ $1 = 'yaml_graphql' ]]; then
    yaml_graphql 
elif [[ $1 = 'gqlgen' ]]; then 
    gqlgen
elif [[ $1 = 'wire' ]]; then
    wire
elif [[ $1 = 'run' ]]; then
    go run main.go --connection "${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(127.0.0.1:3306)/${MYSQL_DATABASE}?charset=utf8mb4&parseTime=true"
elif [[ $1 = 'all' ]]; then
    cleanMigrate
    sql2gql
    goimports
    yaml_graphql
    gqlgen
    wire
else
    echo "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@127.0.0.1:3306/${MYSQL_DATABASE}?charset=utf8mb4&parseTime=true"
    echo "Usage Not found"
    exit 2
fi
